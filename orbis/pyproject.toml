[project]
name = "orbis"
version = "0.1.0"
description = "Advanced agentic RAG system for Azure DevOps tickets with multi-agent workflows and contextual analysis"
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
    "orbis-core",
    "fastapi==0.116.1",
    "uvicorn[standard]==0.35.0",
    "chromadb==1.0.20",
    "openai==1.107.0",
    "pydantic==2.11.7",
    "python-multipart>=0.0.20",
    "python-dotenv>=1.0.0",
    "markdown",
    "bs4",
    "pillow>=11.3.0",
    "pyyaml>=6.0.0",
]
[project.optional-dependencies]
local = [
    "sentence-transformers==5.1.0",
    "torch"
]
azure = []
dev = [
    "ruff>=0.12.0",
    "black>=25.0.0",
    "mypy>=1.17.0",
    "pre-commit>=3.6.0"
]

[tool.uv]
index-url = "https://pypi.org/simple/"

[tool.uv.sources]
orbis-core = { workspace = true }
torch = { index = "pytorch-cu129" }

[[tool.uv.index]]
name = "pytorch-cu129"
url = "https://download.pytorch.org/whl/cu129"
explicit = true

[tool.ruff]
target-version = "py313"
line-length = 88

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]
per-file-ignores = {"__init__.py" = ["F401"]}

[tool.black]
target-version = ['py313']
line-length = 88
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.13"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
